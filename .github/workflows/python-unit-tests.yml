name: Python Unit Tests

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true  # Stop all jobs if one fails
      matrix:
        python-version: ["3.12"]

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'  # Enable pip caching
        
    - name: Install dependencies
      working-directory: ./calculator-project
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Run tests with pytest
      working-directory: ./calculator-project
      run: |
        export PYTHONPATH=$(pwd)
        pytest tests/ --cov=src/ --cov-report=xml --cov-report=html --junitxml=test-results.xml
        
    # - name: Upload test results
    #   if: always()  # Run even if tests fail
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: test-results-${{ matrix.python-version }}
    #     path: |
    #       calculator-project/test-results.xml
    #       calculator-project/htmlcov
          
    - name: Check coverage threshold
      working-directory: ./calculator-project
      run: |
        coverage_percentage=$(coverage report | grep "TOTAL" | awk '{print $4}' | sed 's/%//')
        if (( $(echo "$coverage_percentage < 80" | bc -l) )); then
          echo "Code coverage is below 80% (Current: $coverage_percentage%)"
          exit 1
        fi
        
    - name: SonarQube Scan
      uses: SonarSource/sonarqube-scan-action@v5
      with:
        projectBaseDir: calculator-project
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
